<h1>An Integrated Operational Knowledge Base (System of Operators) and the Innovation
Workbench System Software</h1>

<p align="center">&nbsp;Boris Zlotin and Alla Zusman<br>
September 22, 1992<br>
Kishinev, Moldova</p>

<p ALIGN="CENTER">Translation and comments by Alla Zusman<br>
August, 1998<br>
<font FACE="Arial" SIZE="1"><b>© 1998 Ideation International Inc.<br>
</b>May 1, 1999</font></p>
</font><font SIZE="4"><b>

<p>Definition:</b></font><font SIZE="3"></p>

<p>Operator &#150; a transformation as denoted by a TRIZ principle, method, standard
solution, or utilization of an effect (physical, chemical, geometrical, even
psychological, etc.).</font><b><font SIZE="4"></p>

<p>Prerequisites and Requirements </font><font SIZE="3"></p>

<p>Prerequisites</b></p>

<p>An attempt was made to create an integrated TRIZ knowledge base that combined all
existing TRIZ knowledge base tools. This constituted a logical step in the evolution of
TRIZ, and was primarily a response to the following:

</p><ul>
  <li>A need to adapt TRIZ tools for mass utilization, in accordance with</font><font SIZE="3" COLOR="#0000ff"> </font><font SIZE="3">the transition of TRIZ from the
    &quot;childhood&quot; to &quot;growth&quot; stage on its evolutionary S-curve.</li>
  <li>The re-development of TRIZ tools for the purpose of supporting computerization of TRIZ,
    given the introduction of the first TRIZ-based software by Imlab (project Invention
    machine (IM), Minsk, Belorussia). </li>
</ul>

<p>The IM software family was created on the basis of TRIZ <i>as it was developed for
manual use</i>. This was the right direction to begin with, however, eventually a machine
should work like a machine rather than simply mimicking human methods. To promote this
change in approach it was necessary to reconsider the theoretical base of TRIZ. </p>

<p>The first step in this direction was the development of ARIZ-SMVA, with the
understanding that this version of ARIZ is a process of developing <i>multiple </i>models
for a given problem rather than a single model (as with ARIZ-85). The following models
were identified:

</p><ul>
  <li>A model in the form of a pair of Technical Contradictions (TC-1 and TC-2)</li>
  <li>Graphical model of a conflict </li>
  <li>Substance-Field (SF) model</li>
  <li>Ideal Ultimate Result (IUR)</li>
  <li>Macro- and micro Physical Contradiction (PhC) models</li>
  <li>Smart Little People (SLP) model</li>
  <li>Others</li>
</ul>

<p>Each of the above models is associated with a tool or set of tools. For example, the
Innovation Principles work with Technical Contradictions; the Separation Principles with
Physical Contradictions; the Standard Solutions with Substance-Field models, etc. It is
obvious, however, that it would be much more convenient if there were an integrated tool
that could serve <i>all </i>of the above-mentioned models.</p>

<p>Historically, various TRIZ knowledge-base tools such as the Innovation Principles, the
Separation Principles, Effects, and others were developed as independent tools. Later, the
expectation existed that these tools would eventually be replaced or absorbed by a more
advanced and effective tool such as a complete System of Standard Solutions. This
expectation was based on the assumption that a problem solver will always prefer to obtain
a single, high-level solution rather than a set of solutions that includes those at lower
levels (it was known that the Principles provided solutions of lower level than the
Standard Solutions). As a result, over the next 5 to 6 years TRIZ schools practically
stopped teaching &#150; as well as using &#150; the Innovation Principles altogether, and
instead provided only brief information about this tool. </p>

<p>Later, it became apparent that excluding the Innovation Principles from a
practitioner&#146;s &quot;toolbox&quot; had a negative impact on his practical
problem-solving abilities. This was primarily due to the fact that the Principles had
capabilities that the Standard Solutions didn&#146;t have and hadn&#146;t gained, despite
expectations to the contrary. For example:

</p><ul>
  <li>The Innovation Principles allowed one to search for a solution during an early stage of
    problem analysis &#150; after the formulation of Technical Contradictions. This stage
    occurs before a Substance-Field model has been built and for this reason the Standard
    Solutions can not be applied. Or, in some cases the model cannot be built at all due to
    the complexity of the innovation situation and an unclear understanding about interacting
    objects and their roles (tool and article)</font><font SIZE="3" COLOR="#0000ff"> </font><font SIZE="3">necessary to develop the model &#150; in this case as well the Standard Solutions
    cannot be applied.</li>
  <li>Several very effective recommendations from among the Principles were not included in
    the System of Standard Solutions, and thus went unutilized (for example, &quot;enforcement
    of a harmful action,&quot; and &quot;transformation of a harm into a benefit&quot;).</li>
</ul>

<p>In addition, the local ideality approach made a set of potential solutions preferable,
as it allows one to choose the solution concept that has the highest local ideality. Given
this, it is senseless to abandon ideas that can be obtained via numerous tools. On the
other hand, reinstating all the Principles resulted in duplication, because in many cases
similar recommendations were included in different tools.</p>

<p>&nbsp;<b></p>

<p>Requirements for a System of Operators</b></p>

<p>All of the problems mentioned above can be resolved through the development of an
integrated operational knowledge-base tool (a System of Operators) that includes all
recommendations contained in the Principles, Standard Solutions, Utilization of Resources,
etc. This System should work with any problem model known in TRIZ: Technical
Contradictions, Physical Contradictions, Substance-Field models, etc.</p>

<p>Working with the Contradiction Table, it was found that selecting Principles based on a
pair of contradictory characteristics limits the tool&#146;s capabilities. In fact, with
TC modeling, two characteristics (parameters) are &quot;connected&quot; via a specific
means of eliminating a drawback. For example, one way to improve productivity might cause
an increase in weight, while another way might result in decreased reliability &#150; that
is, lead to a different TC. Given this, we can assume that besides the traditional methods
of eliminating a TC there might be others as well. For example, if our TC contains the
pair &quot;productivity &#150; reliability,&quot; the following might also be considered:

</p><ul>
  <li>Another way to improve productivity that does not impact reliability</li>
  <li>A way to avoid or compensate for the decrease in reliability that does not impact
    productivity</li>
</ul>

<p>In order for these methods of withdrawing a TC to be utilized, the option must be
provided for selecting Principles (Operators) separately for each applicable
characteristic (in addition to the &quot;usual&quot; way; i.e., through the Contradiction
table).</p>

<p>It is also interesting to note that the original Principles were much more specific
than the Principles used today. Many of the Principles were adapted to the specific
characteristics they were intended to deal with. For example, the Principle
&quot;Segmentation&quot; for the purpose of weight reduction differed from the
&quot;Segmentation&quot; used to reduce dimension. Later, Altshuller withdrew such
specifics</font><font SIZE="3" COLOR="#0000ff"> </font><font SIZE="3">from the Principles,
apparently for the sake of the universality and convenience of the Contradiction Table.
However, this &quot;detailization&quot; can now be reconsidered in light of the
possibility of utilizing PC.</p>

<p>Besides &quot;picking up&quot; (selecting for use) an Operator based on a particular
characteristic, it would be useful to do this based on the type of drawback involved or on
a desired function. Providing such &quot;entrances&quot; to the System of Operators
requires that the Operators be classified according to their application.</p>

<p>Keeping in mind the utilization of computers as a goal, a complete redesign of all
existing Operators (Principles, Standard Solutions, etc.), making them much more detailed
and specific, can be achieved. This work has already been started by Lev Pevzner and may
prove to be extremely powerful. Such &quot;detailization&quot; can be accomplished in two
ways: through segmentation of the existing Operators (from the top down); and through the
generalization of illustrations associated with each Operator (from the bottom up)</p>

<p>In conclusion, the following main requirements for a new TRIZ knowledge-base tool can
be formulated:

</p><ul>
  <li>Develop a unified, integrated Operational knowledge-base tool from the Principles,
    Standard Solutions, and various Effects.</li>
  <li>Develop a software engine that provides &quot;entrances&quot; into this tool depending
    on the problem model type (TC, PhC, SF, characteristic, function, drawback type), through
    the specification of Operators according to their applicability.</li>
  <li>Segmentation of the Operators (micro-standard type).</li>
</ul>

<p>&nbsp;<b></p>

<p>Requirements for Illustrations (Examples)</b></p>

<p>An Operator&#146;s recommendation should be illustrated via descriptions of practical
applications. Since most TRIZ recommendations are fairly general, these illustrations
might be far removed from the specific area in which the user&#146;s problem lies &#150;
this can result in a negative impression about TRIZ in general and about IM&#146;s
software. Making the Operators more specific affords the opportunity of supplementing each
Operator with appropriate illustrations. </p>

<p>In the IM software family, the illustrations are installed in a specific product. In
our opinion, it would be much better to allow for the same illustration to be used for
various Operators (when appropriate). On the other hand, the situation wherein the user
arrives at the same illustration several times develops the negative impression of a
limited knowledge base. We have a contradiction: An illustration should serve multiple
Operators to increase its problem-solving power, and should serve one Operator only to
avoid the impression of limited capabilities. One way to resolve this contradiction is to
avoid similar illustrations appearing during demonstration of the software product. For
example, the same illustration shouldn&#146;t be the first one listed for more than one
Operator.</p>

<p>Illustrations should be simple, easy to understand, and convincing. For these reasons
they should be free from unimportant details that can negatively influence &quot;analogic
thinking.&quot; </font></p>

<p>&nbsp;<b></p>

<p>Structure of the System of Operators<font SIZE="3"></p>

<p>Basic characteristics of Operators</b></p>

<p>The work began in September of 1991 as a logical continuation (following ARIZ-SMVA) of
the computerization of TRIZ. A general list that included all Operators derived from the
existing Principles, Standard Solutions, Lines of Evolution, etc. was developed. After
excluding instances of duplication, a preliminary classification of the Operators was
done. This resulted in the understanding that the &quot;database&quot; of Operators should
be divided into three groups, based on the level of universality, as follows:

</p><ul>
  <li>Universal, that is, applicable to any problem. Examples are inversion and
    partial/excessive action.</li>
  <li>Semi-universal, or General (i.e., applicable to many situations). Examples are Operators
    useful for eliminating a class of harmful actions.</li>
  <li>Specific (i.e., specialized). Examples are Operators that constitute methods of
    dispensing a substance.</li>
</ul>

<p>&nbsp;<b></p>

<p>Operator Blocks</b></p>

<p>Operators are used in <i><b>blocks</b></i> (i.e., sets), which are created by selecting
the appropriate &quot;higher-level&quot; Operator from a more general list.</font><font SIZE="3" COLOR="#0000ff"> </font><font SIZE="3">Accordingly, some Operators may be
included in various blocks. The following types of blocks have been identified:

</p><ul>
  <li>Universal</li>
  <li>Specialized</li>
  <li>Purposeful</li>
  <li>Auxiliary</li>
  <li>Block-lines</li>
  <li>Applying substances, fields, effects</li>
</ul>
<b>

<p>Universal Operator Blocks</b></p>

<p>Universal Operators contain recommendations for system transformation irrelevant to the
type of drawback or contradiction to be resolved. The effectiveness of an Operator depends
on how clearly the user comprehends the way to implement the recommendation. If this is
not clear, it is necessary to specify the problem in more detail and apply specialized
Operators. The following Universal Operator Blocks have been identified:

</p><ul>
  <li>Inversion</li>
  <li>Separation</li>
  <li>Integration</li>
  <li>Segmentation</li>
  <li>Partial/excessive action</li>
  <li>Segmentation-integration</li>
</ul>
<b>

<p>Specialized Operator Blocks</b></p>

<p>Specialized blocks address specific types of problems related to a particular function
to be performed or drawback to be eliminated. For convenience, all characteristics are
divided into two groups: useful (such as accuracy or convenience) and harmful (weight,
complexity, etc.). The following Specialized Blocks have been identified:</font></p>
<div align="left">

<table CELLSPACING="0" BORDER="0" CELLPADDING="3">
  <tr>
    <td VALIGN="top"><font SIZE="3">Weight</font></td>
    <td VALIGN="top"><font SIZE="3">Reliability</font></td>
  </tr>
  <tr>
    <td VALIGN="top"><font SIZE="3">Overall dimension</font></td>
    <td VALIGN="top"><font SIZE="3">Speed of action</font></td>
  </tr>
  <tr>
    <td VALIGN="top"><font SIZE="3">Energy consumption</font></td>
    <td VALIGN="top"><font SIZE="3">Mechanical strength</font></td>
  </tr>
  <tr>
    <td VALIGN="top"><font SIZE="3">Complexity</font></td>
    <td VALIGN="top"><font SIZE="3">Composition stability</font></td>
  </tr>
  <tr>
    <td VALIGN="top"><font SIZE="3">Time wasted</font></td>
    <td VALIGN="top"><font SIZE="3">Convenience</font></td>
  </tr>
  <tr>
    <td VALIGN="top"><font SIZE="3">Energy wasted</font></td>
    <td VALIGN="top"><font SIZE="3">Productivity</font></td>
  </tr>
  <tr>
    <td VALIGN="top"></td>
    <td VALIGN="top"><font SIZE="3">Local (selective) mode</font></td>
  </tr>
  <tr>
    <td VALIGN="top"></td>
    <td VALIGN="top"><font SIZE="3">Manufacturing accuracy</font></td>
  </tr>
  <tr>
    <td VALIGN="top"></td>
    <td VALIGN="top"><font SIZE="3">Dispensing accuracy</font></td>
  </tr>
  <tr>
    <td VALIGN="top"></td>
    <td VALIGN="top"><font SIZE="3">Shape</font></td>
  </tr>
  <tr>
    <td VALIGN="top"></td>
    <td VALIGN="top"><font SIZE="3">Universality</font></td>
  </tr>
  <tr>
    <td VALIGN="top"></td>
    <td VALIGN="top"><font SIZE="3">Degree of automation</font></td>
  </tr>
  <tr>
    <td VALIGN="top"></td>
    <td VALIGN="top"><font SIZE="3">Degree of adaptation</font></td>
  </tr>
</table>
</div><font SIZE="3"><b>

<p>Auxiliary Operator Blocks</b></p>

<p>Auxiliary blocks are intended to help improve a solution in terms of ideality and
feasibility, and include the following:

</p><ul>
  <li>Introducing a substance</li>
  <li>Introducing an additive</li>
  <li>Substance modification</li>
  <li>Substance utilization</li>
  <li>Introducing a field</li>
  <li>Readily-available resources</li>
  <li>Derived resources</li>
  <li>Utilization of models</li>
</ul>
<b>

<p>Block-Lines</b></p>

<p>Block-lines help the user to further develop a solution that has been found. These
include:

</p><ul>
  <li>Building bi- and poly-systems</li>
  <li>Developing bi- and poly-systems</li>
  <li>Segmentation</li>
  <li>Reduction</li>
  <li>Developing a substance&#146;s structure</li>
  <li>Dynamization</li>
  <li>Increasing controllability</li>
  <li>Universalization</li>
  <li>Matching-mismatching</li>
</ul>
<b>

<p>Applying substances, fields, effects</b></p>

<p>These blocks should include information related to the selection of fields, substances,
and physical and other effects.</p>
<b>

<p>Purposeful (general) blocks</b></p>

<p>General blocks help identify the &quot;type&quot; of the specific problem being
addressed and offer recommendations for finding solutions. The following general blocks
have been identified:

</p><ul>
  <li>System synthesis</li>
  <li>Increasing effectiveness</li>
  <li>Eliminating harmful effects</li>
</ul>

<p>Altogether, the System of Operators is structured in the form of a list/block: i.e.,
all Operators are placed in a single list, and various blocks are built for various
purposes. </p>
<b>

<p>&nbsp;</b></p>

<p><b>Illustrations</b></p>

<p>Similar to the Operators, the illustrations form their own list. Each potential
illustration gets its specification including indications of Operators it can relate to
(appropriate software addresses are posted). As usual, one illustration can serve
two-three Operators.</font><font SIZE="4"><b></p>

<p>The System of Operators as part of the knowledge base incorporated into the Innovation
Workbench &#153; (IWB) System software prototype</b></font><font SIZE="3"></p>

<p>The structure of the System of Operators became fairly complex due to the numerous
relationships (links) existing between the Operators. For example, if a user is working to
improve dispensing accuracy, one of the Operators from this block recommends the addition
of an easily-dispensed substance; then, to further develop the solution, a block for
eliminating a substance is presented; one of these Operators recommends removing the
introduced substance immediately after it has fulfilled its function; and so on. As a
result, the Operator blocks form a net having a complex, reticular structure that is
practically impossible to draw on a piece of paper (and would be unusable in any case).
This type of structure was implemented with the help of hypertext, in the form of a
branched system of menus consisting of menus of two types: a <i><b>choice menu</b> </i>from
which the user selects an appropriate Operator or Operator block (this constitutes part of
the process of problem clarification), and an <i><b>exploration menu</b></i> whereby the
user works with the recommended Operators one-by-one to develop a solution(s).</p>

<p>The <i><b>choice menu </b></i>allows for the selection of:</p>

<p>&nbsp;</p>

<p>The purpose of the work

</p><ul>
  <li>Whether to work with a technical system or its model</li>
  <li>The type of initial drawback</li>
  <li>Existence of known ways to solve a problem</font><font SIZE="3" COLOR="#0000ff"></li>
  </font><font SIZE="3">
  <li>The type of secondary problem</li>
  <li>A characteristic (parameter) to be improved</li>
  <li>An initial SF model</font></li>
</ul>
<font SIZE="3"><b>

<p>Numbers related to the IWB software prototype (as of April 1992)</b></p>
<div align="left">

<table border="0" cellpadding="3" cellspacing="0">
  <tr>
    <td valign="top" align="left">Operators blocks:</td>
    <td valign="top" align="left">39</td>
    <td valign="top" align="left"></td>
  </tr>
  <tr>
    <td valign="top" align="left">Operators:</td>
    <td valign="top" align="left">approx. 200</td>
    <td valign="top" align="left">(approx. 400 in the recent version, IWB 2.2)</td>
  </tr>
  <tr>
    <td valign="top" align="left">Illustrations:</td>
    <td valign="top" align="left">approx. 300</td>
    <td valign="top" align="left">(approx. 1,300)</td>
  </tr>
  <tr>
    <td valign="top" align="left">Links:</td>
    <td valign="top" align="left">approx. 1,500</td>
    <td valign="top" align="left">(over 14,500)</td>
  </tr>
  <tr>
    <td valign="top" align="left">Screens:</td>
    <td valign="top" align="left">approx. 800</td>
    <td valign="top" align="left">(over 4,000)</td>
  </tr>
  <tr>
    <td valign="top" align="left">Amount of information:</td>
    <td valign="top" align="left">approx. 500KB</td>
    <td valign="top" align="left">(over 2MB) </td>
  </tr>
</table>
</div><b>

<p>Basic Advantages of the IWB prototype</b></p>

<p>The menu system allows the user to clarify the problem without building a TRIZ model.
This simplifies the work for those user&#146;s who do not have special (TRIZ) training. </p>

<p>Unlike the usual practice of applying 2 to 4 single recommendations while working with
the Principles or Standard Solutions, the System of Operators offers &quot;chains&quot; of
recommendations that can include up to 20 Operators in one chain, substantially increasing
the tools problem-solving power.</font><font SIZE="4"><b></p>

<p>Conclusion</b></font><font SIZE="3"></p>

<p>The IWB prototype was demonstrated in April-September 1992 in Moscow, to around 30 TRIZ
specialists from Moscow and St. Petersburg (Russia), Panevegis (Lithania), Minsk
(Belorussia) and Petrozavodsk (Russia), twice. During these demonstrations, as well as
during the seminar for TRIZ specialists conducted by the authors in September, more than
100 people from 27 former Soviet Union cities became familiar with the system.</p>

<p>The overall reaction was positive, especially for the theoretical advances. With regard
to the software implementation, constructive criticism was received. Today, our work with
the prototype continues. When it is finished, we intend to offer it to selected TRIZ
schools and specialists for testing, and to be included as a supporting tool for TRIZ
consultants.</p>

<p>&nbsp;</font><font SIZE="4"><b></p>

<p>Acknowledgements</b></font><font SIZE="3"></p>

<p>We are grateful to our colleagues Igor Vikentiev, Simon Litvin, Alexander Lubomirskiy,
Lev Pevzner, Michael Rubin, Igor Kholkin, Nikolai Khomenko, and Alexander Chistov, as well
as organizations ImLab and LenNilim for useful discussions and suggestions. We would
appreciate any comments related to this paper.</p>
</font><font FACE="Arial" SIZE="1"><b>

<p ALIGN="CENTER">© 1998 Ideation International Inc.<br>
</b>May 1, 1999</font><font FACE="Arial" SIZE="2"></p>
<sup>

<p></sup></font><strong>&nbsp;</strong></p>

<p><strong>&nbsp;</strong></p>

<p><strong>ENDNOTES:</strong>

<ol type="i">
  <li><font FACE="Arial" SIZE="2"><sup></sup></font>This paper was originally prepared in 1992
    for publication in the Journal of TRIZ, in an issue devoted to the Kishinev School. It was
    pulled from publication due to the proprietary nature of the material and because a patent
    was pending related to the Innovation WorkBench System&#153;.</li>
  <li>Later, for the purpose of simplifying the structure of the TRIZ knowledge base, the
    &quot;effects&quot; were excluded from the System of Operators. [Translator&#146;s note.]</li>
  <li>It is an interesting and well-known fact that the first attempts to automate a process
    usually involve imitating the human way, and that these attempts are never successful. (An
    example is the first sewing machine, which had artificial &quot;arms.&quot;) Real success
    was usually associated with the development of a new technology &#150; one suitable for
    automation. [Translator&#146;s note.]</li>
  <li>Boris Zlotin and Alla Zusman, &quot;Problems of ARIZ Enhancement&quot; (in Russian),
    Journal of TRIZ 3, no. 1 (1992). [Translator&#146;s note: See the English translation on
    the scientific channel of our web site, www.ideationtriz.com.</li>
  <li>G. Altshuller et al., The Search for New Ideas: From Insight to Methodology (Kishinev:
    Kartya Moldovenyaska Publishing House, 1989).</li>
  <li>Zlotin and Zusman, &quot;Problems of ARIZ Enhancement.&quot;</li>
  <li>G. Altshuller, Basics of the Method of Inventing (Voroneg: Central Chernosem Publishing
    House, 1964).</li>
  <li>Lev Pevzner, &quot;A Concept for Development of Micro-Standards for Solving Problems
    with the Help of a Computer&quot; (in Russian), Journal of TRIZ 1, no. 2 (1990): p.44. </li>
  <li>Boris Zlotin and Alla Zusman, &quot;Basic Problems Related to the Development of
    TRIZ-Based Software&quot; (in Russian), Journal of TRIZ, V4, no. 1 (1994).</li>
  <li>Later renamed as &quot;General.&quot; [Translator&#146;s note.]</li>
  <li>Later placed in the Innovation Guide. [Translator&#146;s note.]</li>
  <li>These references form so-called &quot;associative chains,&quot; which model the way
    experienced TRIZ Specialists solve problems.</li>
  <li>Boris Zlotin and Alla Zusman, &quot;Basic Problems Related to the Development of
    TRIZ-Based Software&quot; (in Russian), Journal of TRIZ, V4, no. 1 (1994).</li>
  <li>A secondary problem (drawback) results from applying a known way to eliminate the
    initial drawback. [Translator&#146;s note.]</li>
  <li>Later, Substance-Field models were replaced by a verbal problem description.</li>
  <li>Pure text information (text file).</li>
</ol>
